{{/*kast - Kubernetes arcane spelling technology
Copyright (C) 2025 laaledesiempre@disroot.org
Licensed under the GNU GPL v3. See LICENSE file for details.
*/}}
{{- define "externalsecrets.external-secret" }}
{{- $root := index . 0 -}}
{{- $glyphDefinition := index . 1}}
{{- $vaultServers := get (include "runicIndexer.runicIndexer" (list $root.Values.lexicon (default dict $glyphDefinition.selector) "vault" $root.Values.chapter.name ) | fromJson) "results" }}
{{- $storeName := default (include "common.name" $root) $glyphDefinition.storeName }}
{{- $storeKind := default "SecretStore" $glyphDefinition.storeKind }}
{{- if $glyphDefinition.global }}
{{- $secretStore := get (include "runicIndexer.runicIndexer" (list $root.Values.lexicon (default dict $glyphDefinition.selector) "secretStore" $root.Values.chapter.name ) | fromJson) "results" }}
$storeName = $secretStore.name 
$storeKind = "ClusterSecretStore" 
{{- end }}
{{- range $vaultServer := $vaultServers }}
---
apiVersion: external-secrets.io/v1alpha1
kind: ExternalSecret
metadata:
  name: {{ $glyphDefinition.name }}
{{- with $glyphDefinition.labels }}
  labels:
    {{- range .labels }}
    - {{ . }}
    {{- end }}
{{- end }}
{{- with $glyphDefinition.annotations }}
  annotations:
    {{- range .annotations }}
    - {{ . }}
    {{- end }}
{{- end }}

spec:
  secretStoreRef: 
    name: {{ $storeName }}
    kind: {{ $storeKind }}
  refreshPolicy: {{ default "Periodic" $glyphDefinition.refreshPolicy }}
  refreshInterval: {{ default "30m" $glyphDefinition.refreshInterval}} 
  target:
    name: {{ $glyphDefinition.name }}
    creationPolicy: {{ default "Orphan" $glyphDefinition.creationPolicy }}
    deletionPolicy: {{ default "Merge" $glyphDefinition.deletionPolicy }}
  {{- if $glyphDefinition.template }}
  {{- with $glyphDefinition.template }}
    template:
      {{- with .type }} 
      type: {{ . }} #FIXME non tested
      {{- end }}
      {{- with .metadata }}
      metadata: 
        {{- with .labels }}
        labels:
          {{- range .labels }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- with .annotations }}
        annotations:
          {{- range .annotations }}
          - {{ . }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with .data }}
      data: 
      {{- toYaml . | nindent 8 }} 
      {{- end }}
  {{- end }}

  {{- with $glyphDefinition.data }}
  data: 
    {{- range . }}
    - secretKey: {{ .secretKey }}
      remoteRef: 
        key: {{ default (include "generateSecretPath" ( list $root $glyphDefinition $vaultServer "" )) (.remoteRef).key }}
        property: {{ default .secretKey (.remoteRef).property }}
    {{- end }}
  {{- end }}
  {{- else if $glyphDefinition.dataFrom }}
  dataFrom:
  {{- $glyphDefinition.dataFrom | toYaml | nindent 2 }}
  {{- else }}
  dataFrom: 
    - key: {{ include "generateSecretPath" ( list $root $glyphDefinition $vaultServer "" ) }}
    {{- end }}
{{- end }}
{{- end }}
