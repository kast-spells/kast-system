{{/*kast - Kubernetes arcane spelling technology
Copyright (C) 2025 laaledesiempre@disroot.org
Licensed under the GNU GPL v3. See LICENSE file for details.
*/}}
{{- define "externalsecrets.secret-store" }}
{{- $root := index . 0 -}}
{{- $glyphDefinition := index . 1}}
{{- $vaultServers := get (include "runicIndexer.runicIndexer" (list $root.Values.lexicon (default dict $glyphDefinition.provider.selector) $glyphDefinition.provider.type $root.Values.chapter.name ) | fromJson) "results" }}
{{- range $vaultServer := $vaultServers }}
---
apiVersion: external-secrets.io/v1alpha1
kind: {{ default "" $glyphDefinition.mode | title }}SecretStore
metadata:
  name: {{ default (include "common.name" $root ) $glyphDefinition.name }}
spec:
  provider:
  {{- if eq $glyphDefinition.provider.type "vault" }}
    vault:
      version: v2
      server: {{ default $vaultServer.url ($glyphDefinition.provider.config).server }}
      path: {{ default $vaultServer.secretPath ($glyphDefinition.provider.config).path }} #este viene del lexicon de vault
      auth:
        {{- if ($glyphDefinition.provider.config).auth.tokenSecretRef }}
        tokenSecretRef:
          key: {{ ($glyphDefinition.provider.config).auth.tokenSecretRef.key }}
          name: {{ ($glyphDefinition.provider.config).auth.tokenSecretRef.name }}
          namespace: {{ ($glyphDefinition.provider.config).auth.tokenSecretRef.namespace }}
        {{- else  }}
        kubernetes:
          mountPath: {{ default $vaultServer.authPath ($glyphDefinition.provider.config).auth.kubernetes.mountPath }}
          role: {{ default (include "common.name" $root) ($glyphDefinition.provider.config).auth.kubernetes.role }} 

          {{- if ($glyphDefinition.provider.config).auth.kubernetes.serviceAccountRef }} #SA with ref 
          serviceAccountRef:
            name: {{ ($glyphDefinition.provider.config).auth.kubernetes.serviceAccountRef.name }}
            namespace: {{ ($glyphDefinition.provider.config).auth.kubernetes.serviceAccountRef.namespace }}
          {{- end }}

          {{- if ($glyphDefinition.provider.config).auth.kubernetes.secretRef }} #SA JWT
          secretRef:
            name: {{ ($glyphDefinition.provider.config).auth.kubernetes.secretRef.name }}
            namespace: {{ ($glyphDefinition.provider.config).auth.kubernetes.secretRef.namespace }}
            key: {{ ($glyphDefinition.provider.config).auth.kubernetes.secretRef.key }}
          {{- end }}
        {{- end }}
  {{- end }}
{{- end }}
{{- end }}
