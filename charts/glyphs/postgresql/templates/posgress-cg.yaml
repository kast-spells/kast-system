{{/*kast - Kubernetes arcane spelling technology
Copyright (C) 2025 laaledesiempre@disroot.org
Licensed under the GNU GPL v3. See LICENSE file for details.
*/}}

{{- define "postgresql.cluster" }}
{{- $root := index . 0 -}}
{{- $glyphDefinition := index . 1}}

---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ default (include "common.name" $root ) $glyphDefinition.name }}
spec:
  description: {{ default (print "Postgre cluster for" (default (include "common.name" $root ) $glyphDefinition.name)) $glyphDefinition.description }} # NOTE check
  {{- with $glyphDefinition.image }} 
  imageName: {{ include "summon.getImage" (list $root $glyphDefinition) }}  
  {{- end}}
  instances: {{ default 1 $glyphDefinition.instances }}
  {{- with $glyphDefinition.startDelay }}
  startDelay: {{ . }} 
  {{- end}}
  {{- with $glyphDefinition.stopDelay }}
  stopDelay: {{ . }} 
  {{- end}}
  {{- with $glyphDefinition.primaryUpdateStrategy }}
  primaryUpdateStrategy: {{ . }} 
  {{- end}}
  {{- with $glyphDefinition.roles}}
  managed:
     roles:
       {{- toYaml . | nindent 6 }} 
  {{- end}}
  enableSuperuserAccess: {{ default true ($glyphDefinition.superuser).enabled }}
  {{- with ($glyphDefinition.superuser).secret }}
  superuserSecret: {{ . }} 
  {{- end}}
{{- if or $glyphDefinition.postInitApp $glyphDefinition.postInitTemplate $glyphDefinition.postInitPostgres }}
  bootstrap:
    initdb: 
      database: {{ default (include "common.name" $root ) $glyphDefinition.dbName }}
      owner: {{ default (include "common.name" $root ) $glyphDefinition.userName }}
      {{- with $glyphDefinition.secret }} 
      secret:
        name: {{ . }}
      {{- end }}
      {{- with $glyphDefinition.postInitApp }} 
      {{- if eq .type "cm" }}
      postInitApplicationSQLRefs: 
        configMapRefs:  
          - name: {{ default (print "posgres-postinit-app" $glyphDefinition.name) .name }} 
            key: {{ default (print "posgres-postinit-app" $glyphDefinition.name) ( default .name .key) }}
      {{- end }} 
      {{- end }} 
    {{- end}}
  storage:
    {{- with ($glyphDefinition.storage).storageClass }} 
    storageClass: {{ . }}
    {{- end}}
    size: {{ default "1Gi" ($glyphDefinition.storage).size }}
  {{- with $glyphDefinition.resources }} 
  {{- toYaml . | nindent 2 }} 
  {{- end }}
  {{- with $glyphDefinition.affinity }} 
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- with $glyphDefinition.postgresql }} 
  {{- toYaml . | nindent 2 }}
  {{- end }}
 {{- with $glyphDefinition.postInitApp }} 
   {{- if eq .type "cm" }}
     {{- if eq .create true }}
      {{- $defaultValues := dict "definition" ( dict "name" (default (print "posgres-postinit-app" (default (include "common.name" $root ) $glyphDefinition.name ) ) .name ) "content" .content)  }} 
      {{- include "summon.configMap" ( list $root $defaultValues ) }} 
      {{- end}}
    {{- end}}
  {{- end}}
{{- end}}
