{{- $root := . }}
{{- if $root.Values.workflow.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ $root.Values.name }}-{{ $root.Values.workflow.name }}-template
spec:
  activeDeadlineSeconds: 600 #espera 10 mins
  ttlStrategy:
    secondsAfterSuccess: 604800 #estos dos borran
    secondsAfterFailure: 604800 #7 dias ## TODO testear y si borra y eso
  entrypoint: clone-and-list
  serviceAccount: {{ $root.Values.name }}-{{ $root.Values.seviceAccount.name }}-sensor
  arguments:
    parameters:
      - name: revision
        value: develop
      - name: repository
        value: landing
      - name: orgName
        value: the-yaml-life
      - name: eventType
        value: push
  templates:
    - name: clone-and-list
      volumes:
      - name: repo-volume
        emptyDir:
          sizeLimit: 1Gi
      # - name: ssh-key-volume
      #   secret:
      #     secretName: kast01-ssh
      #     defaultMode: 0600
      containerSet:
        volumeMounts:
          - name: repo-volume
            mountPath: /repo
        containers:
        - name: clone-repo
          image: alpine/git
          env:
            - name: GH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gh-token
                  key: ghGithub
          command: [sh, -c] ## hay q agregar un cat al index del book y el chapter ## TODO aca hay un apk add --no-cache optimizacion
          args: ["git clone --depth 1 --branch {{  $root.Values.spellbook.revision }} https://git:$GH_TOKEN@{{ default "github.com" $root.Values.spellbook.gitUrl}}/{{ `{{workflow.parameters.orgName}}`}}/{{ $root.Values.spellbook.repository }}.git /repo/spellbook && 
                  apk add --no-cache yq grep &&
                  cat $(grep -R {{`{{workflow.parameters.repository}} *`}} ) | tee /repo/spellFile.yaml |yq .name &&
                  git clone --depth 1 --branch $(echo \"{{`{{workflow.parameters.revision}}`}}| sed 's#refs/heads/##' )\" https://git:$GH_TOKEN@{{ default "github.com" $root.Values.spellbook.gitUrl }}/{{`{{workflow.parameters.orgName}}`}}/{{`{{workflow.parameters.repository}}`}}.git /repo/spell
                "]
        - name: container-build
          image: noenv/buildah
          command: [sh, -c]
          args: ["apk add --no-cache curl &&
                  curl -sL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/bin/yq &&
                  chmod +x /usr/bin/yq &&         
                  export spellName=$(cat /repo/spellFile.yaml |yq .name) &&
                  export spellRegistry=$(cat /repo/spellFile.yaml |yq .image.repository) &&
                  export spellContainername=$(cat /repo/spellFile.yaml | yq '.containerFile // \"Dockerfile\"') && 
                  buildah login --username=oauth2accesstoken --password=$(cdeployment-github-wg2lvat /var/run/secrets/kubernetes.io/serviceaccount/token) $spellRegistry &&
                  cd /repo/spell && buildah build -f $spellContainername -t $spellRegistry/$spellName:latest -t $spellRegistry/$spellName:{{ `{{workflow.parameters.revision}} `}}  &&
                  buildah push $spellRegistry/$spellName:latest docker://$spellRegistry/$spellName:latest &&
                  buildah push $spellRegistry/$spellName:{{ `{{workflow.parameters.revision}} `}} docker://$spellRegistry/$spellName:{{ `{{workflow.parameters.revision}} `}}"]
          dependencies:
            - clone-repo
        - name: tests
          image: busybox
          command: [sh, -c]
          args: ["sleep 10 && ls /repo"]
          dependencies:
            - clone-repo
        - name: book-signing
          image: dellnoantechnp/git-yq
          env:
            - name: GH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gh-token
                  key: ghGithub
          command: [sh, -c]
          args: ["apk add --no-cache curl &&
                  curl -sL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/bin/yq &&
                  chmod +x /usr/bin/yq &&
                  export spellName=$(cat /repo/spellFile.yaml |yq .name) &&
                  export spellRegistry=$(cat /repo/spellFile.yaml |yq .image.repository) &&
                  cat $(grep -R {{`{{workflow.parameters.repository}}`}}) | yq -i '.image.tag=\"{{ `{{workflow.parameters.revision}}` }}\"'
                  git config --local user.email '{{ default "kaster@kast.ing" ($root.Values.workflow.git).mail }}' &&
                  git config --local user.name '{{ default "kaster" ($root.Values.workflow.git).user }}' &&
                  git add $(grep -R {{`{{workflow.parameters.repository}}`}}) &&
                  export spellName=$(cat /repo/spellFile.yaml |yq .name) &&
                  git commit -m '{{ default "automagic cd " ($root.Values.workflow.git).message }} $spellName {{ $root.Values.spellbook.revision }}' &&
                  git push "]
          dependencies:
            - container-build
            - tests

    - name: after-deploy-validations ## este es otro template q no se si ejecuta paralelo o hay q trigerear o serial
      volumes:
      - name: repo-volume
        emptyDir:
          sizeLimit: 1Gi
      # - name: ssh-key-volume
      #   secret:
      #     secretName: kast01-ssh
      #     defaultMode: 0600
      containerSet:
        volumeMounts:
          - name: repo-volume
            mountPath: /repo
        containers:
        - name: check-status-or-fail
          image: busybox
          command: [sh, -c]
          args: ["sleep 10 && echo 'debuging' && ls /repo"]
## agregar los acceos a la policy? como una funcion de addendum indexado?
## el runic indexer es la funcion de addendum indexado

{{- end }}
