{{- $root := . }}

# rbac (probably)
# confirmar q la ksa de la app pueda  pulleawer

# gcp.sa-asoc
{{- define "iamBind.inline" }}
{{- $root := . }}
name: {{ $root.Values.name }}-registry
member: serviceAccount:{{ $root.Values.projectID }}.svc.id.goog[{{ $root.Release.Namespace }}/{{ include "common.name" $root  }}]
resourceRef:
  apiVersion: artifactregistry.cnrm.cloud.google.com/v1beta1
  kind: ArtifactRegistryRepository
  name: {{ $root.Values.name }}-registry
role: roles/artifactregistry.admin

{{- end }}

{{- $gsaDefinition := include "iamBind.inline" $root | fromYaml }}
{{- include "gcp.iamBind" (list $root $gsaDefinition ) }}

# sa for workflow

{{- define "ksa.inline" }}
enabled: true
{{- end }}
{{- $ksaDefinition := include "ksa.inline" $root | fromYaml  }}
{{- include "summon.serviceAccount" (list $root $ksaDefinition ) }}

# registry repo # registry cleanup
{{- if $root.Values.registry.enabled }}
apiVersion: artifactregistry.cnrm.cloud.google.com/v1beta1
kind: ArtifactRegistryRepository
metadata:
  name: {{ $root.Values.name }}-registry
  labels:
    {{- include "common.infra.labels" $root | nindent 4}}
  annotations:
    {{- include "common.infra.annotations" $root | nindent 4}}
spec:                                                       # spec
  {{- if $root.Values.registry.cleanup.enabled }}    
  cleanupPolicies:                                          # spec.cleanupPolicies
  - action: delete                                          # spec.cleanupPolicies[].action
    condition:                                              # spec.cleanupPolicies[].condition
      newerThan: {{ $root.Values.registry.cleanup.newerThan }}                                          # spec.cleanupPolicies[].condition.newerThan
      olderThan: {{ $root.Values.registry.cleanup.olderThan }}                                         # spec.cleanupPolicies[].condition.olderThan
    id: {{ $root.Values.registry.cleanup.id }}                                  # spec.cleanupPolicies[].id
    mostRecentVersions:                                     # spec.cleanupPolicies[].mostRecentVersions
      keepCount: {{ $root.Values.registry.cleanup.keepNum }}                                         # spec.cleanupPolicies[].mostRecentVersions.keepCount
  {{- end }}
  description: {{ $root.Values.registry.name }}              # spec.description
  dockerConfig:                                             # spec.dockerConfig
    immutableTags: {{ $root.Values.registry.immutableTags }}                                      # spec.dockerConfig.immutableTags
  location: {{ $root.Values.registry.location }}                                    # spec.location
  format: Docker                                            # spec.format
{{- end }}